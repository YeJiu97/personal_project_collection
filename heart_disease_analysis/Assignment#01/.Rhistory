# data set for each gender
heart.male <- subset(heart.full, sex == "male")
heart.female <- subset(heart.full, sex == "female")
# Random forest for male subset
library(randomForest)
set.seed(123)
rf_model_male <- randomForest(target ~ ., data = heart.male, importance = TRUE, ntree = 500)
importance(rf_model_male)
varImpPlot(rf_model_male, col = "red", pch = 20)
# Random forest for female subset
set.seed(123)
rf_model_female <- randomForest(target ~ ., data = heart.female, importance = TRUE, ntree = 500)
importance(rf_model_female)
varImpPlot(rf_model_female, col = "red", pch = 20)
# Create new dataset with selected features and target variable
heart_features_selected <- heart.full[, c("id", "age", "sex", "cp", "thalach", "exang", "oldpeak", "major_vessels", "restwm", "target")]
# Save new dataset as CSV file
write.csv(heart_features_selected, "heart_features_selected.csv", row.names = FALSE)
heart.selected <- read.csv("heart_features_selected.csv")
str(heart.selected)
library(tidyverse)
heart.selected$id <- as.numeric(heart.selected$id)
heart.selected$age <- as.numeric(heart.selected$age)
heart.selected$sex <- as.factor(heart.selected$sex)
heart.selected$cp <- as.factor(heart.selected$cp)
heart.selected$thalach <- as.numeric(heart.selected$thalach)
heart.selected$oldpeak <- as.numeric(heart.selected$oldpeak)
heart.selected$major_vessels <- as.numeric(heart.selected$major_vessels)
heart.selected$target <- as.factor(heart.selected$target)
summary(heart.selected[, -1])
library(psych)
describe(heart.selected[, -1])
boxplot(heart.selected$age ~ heart.selected$target,
main="Heart disease diagnosis distribution by Age",
ylab="Age",xlab="Heart disease diagnosed")
ggplot(heart.selected, aes(x = target, y = age, fill = sex)) +
geom_boxplot() +
labs(title = "Heart disease diagnosis distribution by Age and Gender",
x = "Heart disease diagnosed",
y = "Age") +
scale_fill_discrete(name = "Sex",
labels = c("Female", "Male")) +
theme_minimal()
ggplot(data = heart.selected, aes(x = target, fill = cp)) +
geom_bar(position = "fill") +
labs(title = "Heart disease diagnosis Distributions by Chest pain",
x = "Heart disease diagnosis",
y = "chest pain") +
theme_test()
# Create barplot by chest pain and gender
ggplot(heart.selected, aes(x = target, fill = cp)) +
geom_bar(position = "fill") +
facet_wrap(~sex) +
labs(title = "Heart disease diagnosis Distributions by Chest pain",
x = "Heart disease diagnosis",
y = "chest pain") +
scale_fill_discrete(name = "Chest Pain",
labels = c("Typical Angina", "Atypical Angina", "Non-Angina", "Asymptomatic")) +
theme_test()
mosaicplot(heart.selected$sex ~ heart.selected$target,
main="Heart disease outcome by Gender", shade=FALSE,color=TRUE,
xlab="Gender", ylab="Heart disease")
heart.selected %>% count(target)
View(heart.selected)
View(heart.full)
heart.full %>% count(target)
heart.full %>% count(target)
heart.selected %>% count(target)
# load data set first
heart.full <- read.csv("heart.csv")
# then check the data set
str(heart.full)
sum(is.na(heart.full))
# convert age, trestbps, chol, thalach, and oldpeak to numeric
heart.full$age <- as.numeric(heart.full$age)
heart.full$trestbps <- as.numeric(heart.full$trestbps)
heart.full$chol <- as.numeric(heart.full$chol)
heart.full$thalach <- as.numeric(heart.full$thalach)
heart.full$oldpeak <- as.numeric(heart.full$oldpeak)
# convert sex, cp, restecg, slope, restwm, and target to factor
heart.full$sex <- as.factor(heart.full$sex)
heart.full$cp <- as.factor(heart.full$cp)
heart.full$restecg <- as.factor(heart.full$restecg)
heart.full$slope <- as.factor(heart.full$slope)
heart.full$restwm <- as.factor(heart.full$restwm)
heart.full$target <- as.factor(heart.full$target)
# calculate the correlation matrix
# if convert to factor
cor.matrix <- cor(heart.full[, c("age", "trestbps", "chol", "thalach", "oldpeak", "major_vessels")])
cor.matrix
library(corrplot)
corrplot(cor.matrix, method = "color")
# data set for each gender
heart.male <- subset(heart.full, sex == "male")
heart.female <- subset(heart.full, sex == "female")
# Random forest for male subset
library(randomForest)
set.seed(123)
rf_model_male <- randomForest(target ~ ., data = heart.male, importance = TRUE, ntree = 500)
importance(rf_model_male)
varImpPlot(rf_model_male, col = "red", pch = 20)
# Random forest for female subset
set.seed(123)
rf_model_female <- randomForest(target ~ ., data = heart.female, importance = TRUE, ntree = 500)
importance(rf_model_female)
varImpPlot(rf_model_female, col = "red", pch = 20)
# Create new dataset with selected features and target variable
heart_features_selected <- heart.full[, c("id", "age", "sex", "cp", "thalach", "exang", "oldpeak", "major_vessels", "restwm", "target")]
# Save new dataset as CSV file
write.csv(heart_features_selected, "heart_features_selected.csv", row.names = FALSE)
heart.selected <- read.csv("heart_features_selected.csv")
str(heart.selected)
library(tidyverse)
heart.selected$id <- as.numeric(heart.selected$id)
heart.selected$age <- as.numeric(heart.selected$age)
heart.selected$sex <- as.factor(heart.selected$sex)
heart.selected$cp <- as.factor(heart.selected$cp)
heart.selected$thalach <- as.numeric(heart.selected$thalach)
heart.selected$oldpeak <- as.numeric(heart.selected$oldpeak)
heart.selected$major_vessels <- as.numeric(heart.selected$major_vessels)
heart.selected$target <- as.factor(heart.selected$target)
summary(heart.selected[, -1])
library(psych)
describe(heart.selected[, -1])
boxplot(heart.selected$age ~ heart.selected$target,
main="Heart disease diagnosis distribution by Age",
ylab="Age",xlab="Heart disease diagnosed")
ggplot(heart.selected, aes(x = target, y = age, fill = sex)) +
geom_boxplot() +
labs(title = "Heart disease diagnosis distribution by Age and Gender",
x = "Heart disease diagnosed",
y = "Age") +
scale_fill_discrete(name = "Sex",
labels = c("Female", "Male")) +
theme_minimal()
ggplot(data = heart.selected, aes(x = target, fill = cp)) +
geom_bar(position = "fill") +
labs(title = "Heart disease diagnosis Distributions by Chest pain",
x = "Heart disease diagnosis",
y = "chest pain") +
theme_test()
# Create barplot by chest pain and gender
ggplot(heart.selected, aes(x = target, fill = cp)) +
geom_bar(position = "fill") +
facet_wrap(~sex) +
labs(title = "Heart disease diagnosis Distributions by Chest pain",
x = "Heart disease diagnosis",
y = "chest pain") +
scale_fill_discrete(name = "Chest Pain",
labels = c("Typical Angina", "Atypical Angina", "Non-Angina", "Asymptomatic")) +
theme_test()
mosaicplot(heart.selected$sex ~ heart.selected$target,
main="Heart disease outcome by Gender", shade=FALSE,color=TRUE,
xlab="Gender", ylab="Heart disease")
hist(heart.selected$age)
hist(heart.selected$age == "male")
hist(heart.selected$age[, sex == "male"])
hist(heart.selected$age[, "sex" == "male"])
hist(heart.selected$age[heart.selected$sex == "male"])
hist(heart.selected$age[heart.selected$sex == "male"])
hist(heart.selected$age[heart.selected$sex == "female"])
hist(heart.selected$age[heart.selected$sex == "female"])
hist(heart.selected$age[heart.selected$sex == "male"])
# load data set first
heart.full <- read.csv("heart.csv")
# then check the data set
str(heart.full)
sum(is.na(heart.full))
# convert age, trestbps, chol, thalach, and oldpeak to numeric
heart.full$age <- as.numeric(heart.full$age)
heart.full$trestbps <- as.numeric(heart.full$trestbps)
heart.full$chol <- as.numeric(heart.full$chol)
heart.full$thalach <- as.numeric(heart.full$thalach)
heart.full$oldpeak <- as.numeric(heart.full$oldpeak)
# convert sex, cp, restecg, slope, restwm, and target to factor
heart.full$sex <- as.factor(heart.full$sex)
heart.full$cp <- as.factor(heart.full$cp)
heart.full$restecg <- as.factor(heart.full$restecg)
heart.full$slope <- as.factor(heart.full$slope)
heart.full$restwm <- as.factor(heart.full$restwm)
heart.full$target <- as.factor(heart.full$target)
# calculate the correlation matrix
# if convert to factor
cor.matrix <- cor(heart.full[, c("age", "trestbps", "chol", "thalach", "oldpeak", "major_vessels")])
cor.matrix
library(corrplot)
corrplot(cor.matrix, method = "color")
# data set for each gender
heart.male <- subset(heart.full, sex == "male")
heart.female <- subset(heart.full, sex == "female")
# Random forest for male subset
library(randomForest)
set.seed(123)
rf_model_male <- randomForest(target ~ ., data = heart.male, importance = TRUE, ntree = 500)
importance(rf_model_male)
varImpPlot(rf_model_male, col = "red", pch = 20)
# Random forest for female subset
set.seed(123)
rf_model_female <- randomForest(target ~ ., data = heart.female, importance = TRUE, ntree = 500)
importance(rf_model_female)
varImpPlot(rf_model_female, col = "red", pch = 20)
# Create new dataset with selected features and target variable
heart_features_selected <- heart.full[, c("id", "age", "sex", "cp", "thalach", "exang", "oldpeak", "major_vessels", "restwm", "target")]
# Save new dataset as CSV file
write.csv(heart_features_selected, "heart_features_selected.csv", row.names = FALSE)
heart.selected <- read.csv("heart_features_selected.csv")
str(heart.selected)
library(tidyverse)
heart.selected$id <- as.numeric(heart.selected$id)
heart.selected$age <- as.numeric(heart.selected$age)
heart.selected$sex <- as.factor(heart.selected$sex)
heart.selected$cp <- as.factor(heart.selected$cp)
heart.selected$thalach <- as.numeric(heart.selected$thalach)
heart.selected$oldpeak <- as.numeric(heart.selected$oldpeak)
heart.selected$major_vessels <- as.numeric(heart.selected$major_vessels)
heart.selected$target <- as.factor(heart.selected$target)
summary(heart.selected[, -1])
library(psych)
describe(heart.selected[, -1])
hist(heart.selected$age[heart.selected$sex == "male"])
hist(heart.selected$age[heart.selected$sex == "female"])
boxplot(heart.selected$age ~ heart.selected$target,
main="Heart disease diagnosis distribution by Age",
ylab="Age",xlab="Heart disease diagnosed")
ggplot(heart.selected, aes(x = target, y = age, fill = sex)) +
geom_boxplot() +
labs(title = "Heart disease diagnosis distribution by Age and Gender",
x = "Heart disease diagnosed",
y = "Age") +
scale_fill_discrete(name = "Sex",
labels = c("Female", "Male")) +
theme_minimal()
ggplot(data = heart.selected, aes(x = target, fill = cp)) +
geom_bar(position = "fill") +
labs(title = "Heart disease diagnosis Distributions by Chest pain",
x = "Heart disease diagnosis",
y = "chest pain") +
theme_test()
# Create barplot by chest pain and gender
ggplot(heart.selected, aes(x = target, fill = cp)) +
geom_bar(position = "fill") +
facet_wrap(~sex) +
labs(title = "Heart disease diagnosis Distributions by Chest pain",
x = "Heart disease diagnosis",
y = "chest pain") +
scale_fill_discrete(name = "Chest Pain",
labels = c("Typical Angina", "Atypical Angina", "Non-Angina", "Asymptomatic")) +
theme_test()
mosaicplot(heart.selected$sex ~ heart.selected$target,
main="Heart disease outcome by Gender", shade=FALSE,color=TRUE,
xlab="Gender", ylab="Heart disease")
boxplot(heart.selected$thalach ~ heart.selected$target,
main="Heart disease diagnosis distribution by Age",
ylab="Thalach",xlab="Heart disease diagnosed")
boxplot(heart.selected$thalach ~ heart.selected$target,
main="Heart disease diagnosis distribution by Age",
ylab="Thalach",xlab="Heart disease diagnosed")
boxplot(heart.selected$thalach ~ heart.selected$target,
main="Heart disease diagnosis distribution by Thalach",
ylab="Thalach",xlab="Heart disease diagnosed")
ggplot(data = heart.selected, aes(x = target, fill = cp)) +
geom_bar(position = "fill") +
labs(title = "Heart disease diagnosis Distributions by Chest pain",
x = "Heart disease diagnosis",
y = "chest pain") +
theme_test()
# Create barplot by chest pain and gender
ggplot(heart.selected, aes(x = target, fill = cp)) +
geom_bar(position = "fill") +
facet_wrap(~sex) +
labs(title = "Heart disease diagnosis Distributions by Chest pain",
x = "Heart disease diagnosis",
y = "chest pain") +
scale_fill_discrete(name = "Chest Pain"# ,
# labels = c("Typical Angina", "Atypical Angina", "Non-Angina", "Asymptomatic")) +
theme_test()
# Create barplot by chest pain and gender
ggplot(heart.selected, aes(x = target, fill = cp)) +
geom_bar(position = "fill") +
facet_wrap(~sex) +
labs(title = "Heart disease diagnosis Distributions by Chest pain",
x = "Heart disease diagnosis",
y = "chest pain") +
scale_fill_discrete(name = "Chest Pain") + # ,
# labels = c("Typical Angina", "Atypical Angina", "Non-Angina", "Asymptomatic")) +
theme_test()
# Create barplot by chest pain and gender
ggplot(heart.selected, aes(x = target, fill = cp)) +
geom_bar(position = "fill") +
facet_wrap(~sex) +
labs(title = "Heart disease diagnosis Distributions by Chest pain",
x = "Heart disease diagnosis",
y = "chest pain") +
scale_fill_discrete(name = "Chest Pain") +
theme_test()
# calculate the correlation matrix
# if convert to factor
cor.matrix <- cor(heart.selected[, c("age", "trestbps", "chol", "thalach", "oldpeak", "major_vessels")])
# calculate the correlation matrix
# if convert to factor
cor.matrix <- cor(heart.selected[, c("age", "sex", "cp", "thalach", "exang", "oldpeak", "major_vessels", "restwm", "target")])
# calculate the correlation matrix
# if convert to factor
heart.selected$id <- as.numeric(heart.selected$id)
heart.selected$age <- as.numeric(heart.selected$age)
heart.selected$sex <- as.numeric(heart.selected$sex)
heart.selected$cp <- as.numeric(heart.selected$cp)
heart.selected$thalach <- as.numeric(heart.selected$thalach)
heart.selected$oldpeak <- as.numeric(heart.selected$oldpeak)
heart.selected$major_vessels <- as.numeric(heart.selected$major_vessels)
heart.selected$target <- as.numeric(heart.selected$target)
cor.matrix <- cor(heart.selected[, c("age", "sex", "cp", "thalach", "exang", "oldpeak", "major_vessels", "restwm", "target")])
# Load the required package
library(psych)
# Create some sample data
a <- factor(c("Yes", "No", "No", "Yes", "No", "No", "Yes", "Yes", "No"))
b <- c(5, 8, 6, 7, 9, 6, 8, 9, 5)
# Calculate the Point-Biserial Correlation Coefficient
corr_pb <- pointbiserialr(b, as.numeric(a) - 1)
# Load the required package
library(psych)
# Create some sample data
a <- factor(c("Yes", "No", "No", "Yes", "No", "No", "Yes", "Yes", "No"))
b <- c(5, 8, 6, 7, 9, 6, 8, 9, 5)
# Calculate the Point-Biserial Correlation Coefficient
corr_pb <- pointbiserial(b, as.numeric(a) - 1)
# calculate the correlation matrix
# if convert to factor
heart.selected$id <- as.numeric(heart.selected$id)
heart.selected$age <- as.numeric(heart.selected$age)
heart.selected$sex <- as.numeric(heart.selected$sex)
heart.selected$cp <- as.numeric(heart.selected$cp)
heart.selected$thalach <- as.numeric(heart.selected$thalach)
heart.selected$oldpeak <- as.numeric(heart.selected$oldpeak)
heart.selected$major_vessels <- as.numeric(heart.selected$major_vessels)
cor.matrix <- cor(heart.selected[, c("age", "sex", "cp", "thalach", "exang", "oldpeak", "major_vessels", "restwm")])
heart.selected
# calculate the correlation matrix
# if convert to factor
heart.selected$id <- as.numeric(heart.selected$id)
heart.selected$age <- as.numeric(heart.selected$age)
heart.selected$sex <- as.numeric(heart.selected$sex)
heart.selected$cp <- as.numeric(heart.selected$cp)
heart.selected$thalach <- as.numeric(heart.selected$thalach)
heart.selected$oldpeak <- as.numeric(heart.selected$oldpeak)
heart.selected$major_vessels <- as.numeric(heart.selected$major_vessels)
heart.selected$exang <- as.numeric(heart.selected$exang)
heart.selected$restwm <- as.numeric(heart.selected$restwm)
cor.matrix <- cor(heart.selected[, c("age", "sex", "cp", "thalach", "exang", "oldpeak", "major_vessels", "restwm")])
cor.matrix
# calculate the correlation matrix
# if convert to factor
heart.selected$id <- as.numeric(heart.selected$id)
heart.selected$age <- as.numeric(heart.selected$age)
heart.selected$sex <- as.numeric(heart.selected$sex)
heart.selected$cp <- as.numeric(heart.selected$cp)
heart.selected$thalach <- as.numeric(heart.selected$thalach)
heart.selected$oldpeak <- as.numeric(heart.selected$oldpeak)
heart.selected$major_vessels <- as.numeric(heart.selected$major_vessels)
heart.selected$exang <- as.numeric(heart.selected$exang)
heart.selected$restwm <- as.numeric(heart.selected$restwm)
cor.matrix <- cor(heart.selected[, c("age", "sex", "cp", "thalach", "exang", "oldpeak", "major_vessels", "restwm")])
cor.matrix
library(tidyverse)
heart.selected$id <- as.numeric(heart.selected$id)
heart.selected$age <- as.numeric(heart.selected$age)
heart.selected$sex <- as.factor(heart.selected$sex)
heart.selected$cp <- as.factor(heart.selected$cp)
heart.selected$thalach <- as.numeric(heart.selected$thalach)
heart.selected$oldpeak <- as.numeric(heart.selected$oldpeak)
heart.selected$major_vessels <- as.numeric(heart.selected$major_vessels)
heart.selected$target <- as.factor(heart.selected$target)
summary(heart.selected[, -1])
View(heart.selected)
library(tidyverse)
heart.selected$id <- as.numeric(heart.selected$id)
heart.selected$age <- as.numeric(heart.selected$age)
heart.selected$sex <- as.factor(heart.selected$sex)
heart.selected$cp <- as.factor(heart.selected$cp)
heart.selected$thalach <- as.numeric(heart.selected$thalach)
heart.selected$oldpeak <- as.numeric(heart.selected$oldpeak)
heart.selected$major_vessels <- as.numeric(heart.selected$major_vessels)
heart.selected$target <- as.factor(heart.selected$target)
summary(heart.selected[, -1])
# calculate the correlation matrix
# if convert to factor
heart.selected$age <- as.numeric(heart.selected$age)
heart.selected$thalach <- as.numeric(heart.selected$thalach)
heart.selected$oldpeak <- as.numeric(heart.selected$oldpeak)
heart.selected$major_vessels <- as.numeric(heart.selected$major_vessels)
cor.matrix <- cor(heart.selected[, c("age",  "thalach", "oldpeak", "major_vessels")])
cor.matrix
corrplot(cor.matrix)
# Load the required package
library(psych)
# Create some sample data
a <- factor(c("Yes", "No", "No", "Yes", "No", "No", "Yes", "Yes", "No"))
b <- c(5, 8, 6, 7, 9, 6, 8, 9, 5)
# Calculate the Point-Biserial Correlation Coefficient
corr_pb <- pointbiserial(b, as.numeric(a) - 1)
# load dataset first
heart.full <- read.csv("heart.csv")
# then check the dataset
str(heart.full)
sum(is.na(heart.full))
# convert age, trestbps, chol, thalach, and oldpeak to numeric
heart.full$age <- as.numeric(heart.full$age)
heart.full$trestbps <- as.numeric(heart.full$trestbps)
heart.full$chol <- as.numeric(heart.full$chol)
heart.full$thalach <- as.numeric(heart.full$thalach)
heart.full$oldpeak <- as.numeric(heart.full$oldpeak)
# convert sex, cp, restecg, slope, restwm, and target to factor
heart.full$sex <- as.factor(heart.full$sex)
heart.full$cp <- as.factor(heart.full$cp)
heart.full$restecg <- as.factor(heart.full$restecg)
heart.full$slope <- as.factor(heart.full$slope)
heart.full$restwm <- as.factor(heart.full$restwm)
heart.full$target <- as.factor(heart.full$target)
# dataset for each gender
heart.male <- subset(heart.full, sex == "male")
heart.female <- subset(heart.full, sex == "female")
# Random forest for male subset
library(randomForest)
set.seed(123)
rf_model_male <- randomForest(target ~ ., data = heart.male, importance = TRUE, ntree = 500)
importance(rf_model_male)
varImpPlot(rf_model_male, col = "red", pch = 20)
# Random forest for female subset
set.seed(123)
rf_model_female <- randomForest(target ~ ., data = heart.female, importance = TRUE, ntree = 500)
importance(rf_model_female)
varImpPlot(rf_model_female, col = "red", pch = 20)
# Create new dataset with selected features and target variable
heart_features_selected <- heart.full[, c("id", "age", "sex", "cp", "thalach", "exang", "oldpeak", "major_vessels", "restwm", "target")]
# Save new dataset as CSV file
write.csv(heart_features_selected, "heart_features_selected.csv", row.names = FALSE)
heart.selected <- read.csv("heart_features_selected.csv")
str(heart.selected)
library(tidyverse)
heart.selected$id <- as.numeric(heart.selected$id)
heart.selected$age <- as.numeric(heart.selected$age)
heart.selected$sex <- as.factor(heart.selected$sex)
heart.selected$cp <- as.factor(heart.selected$cp)
heart.selected$thalach <- as.numeric(heart.selected$thalach)
heart.selected$oldpeak <- as.numeric(heart.selected$oldpeak)
heart.selected$major_vessels <- as.numeric(heart.selected$major_vessels)
heart.selected$target <- as.factor(heart.selected$target)
summary(heart.selected[, -1])
library(psych)
describe(heart.selected[, -1])
par(mfrow=c(1,2)) # To plot the histograms side by side
hist(heart.selected$age[heart.selected$sex == "male"], main = "Age Distribution for Males", xlab = "Age for male")
hist(heart.selected$age[heart.selected$sex == "female"], main = "Age Distribution for Females", xlab = "Age for female")
boxplot(heart.selected$age ~ heart.selected$target,
main="Heart disease diagnosis distribution by Age",
ylab="Age",xlab="Heart disease diagnosed")
ggplot(heart.selected, aes(x = target, y = age, fill = sex)) +
geom_boxplot() +
labs(title = "Heart disease diagnosis distribution by Age and Gender",
x = "Heart disease diagnosed",
y = "Age") +
scale_fill_discrete(name = "Sex",
labels = c("Female", "Male")) +
theme_minimal()
ggplot(data = heart.selected, aes(x = target, fill = cp)) +
geom_bar(position = "fill") +
labs(title = "Heart disease diagnosis Distributions by Chest pain",
x = "Heart disease diagnosis",
y = "chest pain") +
theme_test()
mosaicplot(heart.selected$sex ~ heart.selected$target,
main="Heart disease outcome by Gender", shade=FALSE,color=TRUE,
xlab="Gender", ylab="Heart disease")
# Create barplot by chest pain and gender
ggplot(heart.selected, aes(x = target, fill = cp)) +
geom_bar(position = "fill") +
facet_wrap(~sex) +
labs(title = "Heart disease diagnosis Distributions by Chest pain",
x = "Heart disease diagnosis",
y = "chest pain") +
scale_fill_discrete(name = "Chest Pain") +
theme_test()
# Exploratory data analysis of thalach
ggplot(data = heart.selected, aes(x = thalach)) +
geom_histogram(bins = 30, fill = "purple", color = "black") +
labs(title = "Distribution of Maximum Heart Rate Achieved",
x = "Maximum Heart Rate Achieved", y = "Frequency")
boxplot(heart.selected$thalach ~ heart.selected$target,
main="Heart disease diagnosis distribution by Thalach",
ylab="Thalach",xlab="Heart disease diagnosed")
# Relationship between thalach and target
ggplot(data = heart.selected, aes(x = thalach, fill = target)) +
geom_density(alpha = 0.5) +
labs(title = "Relationship between Maximum Heart Rate Achieved and Heart Disease Diagnosis",
x = "Maximum Heart Rate Achieved", y = "Density", fill = "Diagnosis") +
scale_fill_manual(values = c("red", "green"))
# Relationship between thalach and target divided into gender
ggplot(data = heart.selected, aes(x = thalach, fill = target)) +
geom_density(alpha = 0.5) +
labs(title = "Relationship between Maximum Heart Rate Achieved and Heart Disease Diagnosis by Gender",
x = "Maximum Heart Rate Achieved", y = "Density", fill = "Diagnosis") +
scale_fill_manual(values = c("red", "green")) +
facet_wrap(~ sex)
# calculate the correlation matrix
library(corrplot)
heart.selected$age <- as.numeric(heart.selected$age)
heart.selected$thalach <- as.numeric(heart.selected$thalach)
heart.selected$oldpeak <- as.numeric(heart.selected$oldpeak)
heart.selected$major_vessels <- as.numeric(heart.selected$major_vessels)
cor.matrix <- cor(heart.selected[, c("age",  "thalach", "oldpeak", "major_vessels")])
cor.matrix
corrplot(cor.matrix)
