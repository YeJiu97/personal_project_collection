# linear regression between price and type of property and number of bedrooms
boxplot(price~type,data=rental_df, main = "Boxplot of price and type")
anova_regression_property <- aov(price ~ type, data = rental_df)
summary(anova_regression_property)
HSD_property <- TukeyHSD(anova_regression_property)
HSD_property  # p-adj value，小于0.05，认为在5%上是significant
plot(HSD_property)  # 不过虚线，一共四个，这四个是significant，diff为average，lwr和upr是95% confident interval，从统计上来讲，house的平均价格比apartment的平均价格要高
cor(rental_df$price, rental_df$bedroom)
linear_regression_bedroom <- lm(price ~ bedroom, data = rental_df)
summary(linear_regression_bedroom)  # 平均来讲，每增加一个bedroom，租金将会上涨156.72，p-value都小于了0.05,（如上）,r-square的值只有0.4225，可以认为采用bedroom作为变量进行预测的模型只能够在42.25%的程度上进行解释
cor(rental_df$price, rental_df$bedroom)
plot(rental_df$bedroom, rental_df$price)
# gain the descriptive statistics information for distribution of the price
describe(rental_df["car_space"])
# visualization of the distribution of the overall price
ggplot(rental_df, aes(x = car_space)) + geom_histogram() + labs(x = "Car Space", title = "The distribution of Car Space")
ggplot(rental_df, aes(x = car_space)) + geom_histogram() + labs(x = "car_space", title = "The distribution of car_space") + facet_wrap("type")
ggplot(rental_df, aes(x = car_space)) + geom_histogram() + labs(x = "Car Space", title = "The distribution of Car Space") + facet_wrap("type")
anova_regression_property_car_space <- aov(car_space ~ type, data = rental_df)
summary(anova_regression_property_car_space)
HSD_property_car_space <- TukeyHSD(anova_regression_property_car_space)
HSD_property_car_space  # p-adj value，小于0.05，认为在5%上是significant
plot(HSD_property_car_space)  # 不过虚线，一共四个，这四个是significant，diff为average，lwr和upr是95% confident interval，从统计上来讲，house的平均价格比apartment的平均价格要高
plot(rental_df$bedroom, rental_df$price)  # 从体上来看，随着bedroom的数量的上升，price的价格也随之上升
cor(rental_df$price, rental_df$bedroom)
plot(rental_df$bedroom, rental_df$car_space)  # 从体上来看，随着bedroom的数量的上升，price的价格也随之上升
cor(rental_df$car_space, rental_df$bedroom)
linear_regression_bedroom_car_space <- lm(car_space ~ bedroom, data = rental_df)
summary(linear_regression_bedroom_car_space)  # 平均来讲，每增加一个bedroom，租金将会上涨156.72，p-value都小于了0.05,（如上）,r-square的值只有0.4225，可以认为采用bedroom作为变量进行预测的模型只能够在42.25%的程度上进行解释
# 首先将sub为阿德莱德的数据提取出来
rental_adelaide_df <- rental_df[rental_df["sub" = "Adelaide SA 5000"], ]
# 首先将sub为阿德莱德的数据提取出来
rental_adelaide_df <- rental_df[rental_df[sub = "Adelaide SA 5000"], ]
# 首先将sub为阿德莱德的数据提取出来
rental_adelaide_df <- rental_df[rental_df$sub = "Adelaide SA 5000", ]
# 首先将sub为阿德莱德的数据提取出来
rental_adelaide_df <- rental_df[rental_df$sub == "Adelaide SA 5000", ]
View(rental_adelaide_df)
View(rental_adelaide_df)
# 首先将sub为阿德莱德的数据提取出来
rental_adelaide_df <- rental_df[rental_df$sub == "Adelaide SA 5000", ]
View(rental_df)
View(rental_adelaide_df)
# load packages
library(dplyr)
library(tidyverse)
library(psych)
library(stats)
# load data
rental_df <- readRDS("examdata.RDS")
# drop rows with NA value
rental_df <- na.omit(rental_df)
# transfer some variables from char into numeric
rental_df$price <- as.numeric(rental_df$price)
rental_df$bedroom <- as.numeric(rental_df$bedroom)
rental_df$bathroom <- as.numeric(rental_df$bathroom)
rental_df$car_space <- as.numeric(rental_df$car_space)
# gain the descriptive statistics information for distribution of the price
describe(rental_df["price"])
# visualization of the distribution of the overall price
ggplot(rental_df, aes(x = price)) + geom_histogram() + labs(x = "Price", title = "The distribution of prices")
ggplot(rental_df, aes(x = price)) + geom_histogram() + labs(x = "Price", title = "The distribution of prices") + facet_wrap("type")
# linear regression between price and type of property and number of bedrooms
boxplot(price~type,data=rental_df, main = "Boxplot of price and type")
anova_regression_property <- aov(price ~ type, data = rental_df)
summary(anova_regression_property)
HSD_property <- TukeyHSD(anova_regression_property)
HSD_property  # p-adj value，小于0.05，认为在5%上是significant
plot(HSD_property)  # 不过虚线，一共四个，这四个是significant，diff为average，lwr和upr是95% confident interval，从统计上来讲，house的平均价格比apartment的平均价格要高
plot(rental_df$bedroom, rental_df$price)  # 从体上来看，随着bedroom的数量的上升，price的价格也随之上升
cor(rental_df$price, rental_df$bedroom)
linear_regression_bedroom <- lm(price ~ bedroom, data = rental_df)
summary(linear_regression_bedroom)  # 平均来讲，每增加一个bedroom，租金将会上涨156.72，p-value都小于了0.05,（如上）,r-square的值只有0.4225，可以认为采用bedroom作为变量进行预测的模型只能够在42.25%的程度上进行解释
# gain the descriptive statistics information for distribution of the price
describe(rental_df["car_space"])
# visualization of the distribution of the overall price
ggplot(rental_df, aes(x = car_space)) + geom_histogram() + labs(x = "Car Space", title = "The distribution of Car Space")
ggplot(rental_df, aes(x = car_space)) + geom_histogram() + labs(x = "Car Space", title = "The distribution of car Space") + facet_wrap("type")
# linear regression between price and type of property and number of bedrooms
boxplot(price~type,data=rental_df, main = "Boxplot of price and type")
anova_regression_property_car_space <- aov(car_space ~ type, data = rental_df)
summary(anova_regression_property_car_space)
HSD_property_car_space <- TukeyHSD(anova_regression_property_car_space)
HSD_property_car_space  # p-adj value，小于0.05，认为在5%上是significant
plot(HSD_property_car_space)  # 不过虚线，一共四个，这四个是significant，diff为average，lwr和upr是95% confident interval，从统计上来讲，house的平均价格比apartment的平均价格要高
plot(rental_df$bedroom, rental_df$car_space)  # 从体上来看，随着bedroom的数量的上升，price的价格也随之上升
cor(rental_df$car_space, rental_df$bedroom)
linear_regression_bedroom_car_space <- lm(car_space ~ bedroom, data = rental_df)
summary(linear_regression_bedroom_car_space)  # 平均来讲，每增加一个bedroom，租金将会上涨156.72，p-value都小于了0.05,（如上）,r-square的值只有0.4225，可以认为采用bedroom作为变量进行预测的模型只能够在42.25%的程度上进行解释
# 首先将sub为阿德莱德的数据提取出来
rental_adelaide_df <- rental_df[rental_df$sub == "Adelaide SA 5000", ]
View(rental_adelaide_df)
View(rental_df)
# 首先将sub为阿德莱德的数据提取出来
rental_adelaide_df <- rental_df[rental_df$sub == " Adelaide SA 5000", ]
rental_non_adelaide_df <- rental_df[rental_df$sub != " Adelaide SA 5000", ]
View(rental_non_adelaide_df)
table(rental_adelaide_df$street)
sort(table(rental_adelaide_df$street))
sort(talbe(rental_non_adelaide_df))
sort(table(rental_non_adelaide_df))
sort(table(rental_non_adelaide_df$sub))
sort(table(rental_adelaide_df$street))
rental_ws_df <- rental_df[rental_df$street == "Wright Street "]
rental_ws_df <- rental_df[rental_df$street == "Wright Street "]
rental_ws_df <- rental_df[rental_df$street == "Wright Street ", ]
View(rental_ws_df)
View(rental_ws_df)
summary(rental_ws_df)
rental_popu_df <- rental_df[rental_df$street == "Wright Street " || rental_df$street == "Waymouth Street " || rental_df$street == "- Waymouth Street"
rental_df$street == "Hutt Street" || rental_df$street == "Hindley Street " || rental_df$street == "Gray Street", ]
rental_popu_df <- rental_df[rental_df$street == "Wright Street " || rental_df$street == "Waymouth Street " || rental_df$street == "- Waymouth Street" ||
rental_df$street == "Hutt Street" || rental_df$street == "Hindley Street " || rental_df$street == "Gray Street", ]
summary(rental_ws_df)
rental_popu_df
rental_popu_df <- rental_df[rental_df$street == "Wright Street " | rental_df$street == "Waymouth Street " | rental_df$street == "- Waymouth Street" |
rental_df$street == "Hutt Street" | rental_df$street == "Hindley Street " | rental_df$street == "Gray Street", ]
summary(rental_ws_df)
rental_popu_df
rental_popu_df <- rental_df[rental_df$street == "Wright Street " | rental_df$street == "Waymouth Street " | rental_df$street == "- Waymouth Street" |
rental_df$street == "Hutt Street " | rental_df$street == "Hindley Street " | rental_df$street == "Gray Street ", ]
rental_popu_df
summary(rental_ws_df)
table(rental_popu_df$type)
talbe(rental_popu_df$car_space)
table(rental_popu_df$car_space)
barplot(table(rental_popu_df$type))
barplot(table(rental_popu_df$car_space))
barplot(table(rental_popu_df$price))
hist(table(rental_popu_df$price))
hist(rental_popu_df$price)
barplot(table(rental_popu_df$bedroom))
barplot(table(rental_popu_df$bathroom))
sort(table(rental_non_adelaide_df$sub))
rental_popu_sub_df <- rental_df[rental_df$sub == "North Adelaide SA 5006", ]
rental_popu_sub_df
rental_popu_sub_df <- rental_df[rental_df$sub == "North Adelaide SA 5006 ", ]
rental_popu_sub_df <- rental_df[rental_df$sub == " North Adelaide SA 5006", ]
rental_popu_sub_df
summary(rental_popu_sub_df)
barplot(table(rental_popu_sub_df$type))
barplot(table(rental_popu_sub_df$car_space))
barplot(table(rental_popu_sub_df$bedroom))
barplot(table(rental_popu_sub_df$bathroom))
hist(rental_popu_sub_df$price)
getwd()
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
),
# Second tab content
tabItem(tabName = "widgets",
h2("Widgets tab content")
)
)
)
install.packages("shinydashboard")
# load packages
library(shinydashboard)
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
),
# Second tab content
tabItem(tabName = "widgets",
h2("Widgets tab content")
)
)
)
## app.R ##
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Basic dashboard"),
dashboardSidebar(),
dashboardBody(
# Boxes need to be put in a row (or column)
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
)
)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# load packages
library(rvest)
library(stringr)
# webpage scrap  function
scrap_rental <- function(url){
rental_p1 <- read_html(url)
rental_information <- rental_p1 %>% html_nodes("div.overview") %>% html_text (trim=TRUE)
split_information <- strsplit(rental_information, split = "\n+")
return (split_information)
}
# all webpages' URL addresses
url_lists <- c("https://www.rent.com.au/properties/adelaide-sa-5000/p1",
"https://www.rent.com.au/properties/adelaide-sa-5000/p2",
"https://www.rent.com.au/properties/adelaide-sa-5000/p3",
"https://www.rent.com.au/properties/adelaide-sa-5000/p4",
"https://www.rent.com.au/properties/adelaide-sa-5000/p5",
"https://www.rent.com.au/properties/adelaide-sa-5000/p6",
"https://www.rent.com.au/properties/adelaide-sa-5000/p7")
# an empty list use to storage scrape results
rental_information_totally <- list()
# storage scrape results by using webpage scrap  function
for (url_list in url_lists){
rental_information_totally <- append(rental_information_totally, scrap_rental(url_list))
}
# create data frame with 0 rows and 5 columns
df <- data.frame(matrix(ncol = 9, nrow = 0))
# provide column names
colnames(df) <- c('price', 'type', 'address', "street", 'sub', 'bedroom', "bathroom", "car_space", "original_information")
# using for loop to build the data frame
for (rental_information_list in rental_information_totally){
# not enough information provided
if (length(rental_information_list) < 6){
next
}
# below code will transfer data to data frame for each variables
price_temp <- strsplit(gsub(",", "", rental_information_list[1]), "[^[:digit:]]+")[[1]]
price <- price_temp[2] %>% as.numeric()
type <- rental_information_list[2]
address <- rental_information_list[3]
if (!grepl(",", address)){
next
}
temp <- strsplit(address, ",")[[1]][1]
street_previous <- rev(strsplit(temp," ")[[1]])
street <- ""
for (element in street_previous){
if (grepl("[[:digit:]]", element)){
break
} else {
street <- paste(element, street)
}
}
sub <- strsplit(rental_information_list[3], ",")[[1]][2]
bedroom <- strsplit(rental_information_list[4], " ")[[1]][1] %>% as.numeric()
bathroom <- strsplit(rental_information_list[5], " ")[[1]][1] %>% as.numeric()
car_space <- strsplit(rental_information_list[6], " ")[[1]][1] %>% as.numeric()
# data frame
df[nrow(df) + 1,] = c(price,type, address, street, sub, bedroom, bathroom, car_space, paste(rental_information_list, collapse=" "))
}
# drop rows with NA value
df <- na.omit(df)
# transfer some variables from char into numeric
df$price <- as.numeric(df$price)
df$bedroom <- as.numeric(df$bedroom)
df$bathroom <- as.numeric(df$bathroom)
df$car_space <- as.numeric(df$car_space)
# save data frame as RDS file
saveRDS(df, "examdata.RDS")
rental_df <- readRDS("examdata.RDS")
str(rental_df)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
# load packages
library(dplyr)
library(tidyverse)
library(psych)
library(stats)
# load data
rental_df <- readRDS("examdata.RDS")
# gain the descriptive statistics information for distribution of the price
describe(rental_df["price"])
# visualization of the distribution of the overall price
ggplot(rental_df, aes(x = price)) + geom_histogram() + labs(x = "Price", title = "The distribution of prices")
ggplot(rental_df, aes(x = price)) + geom_histogram() + labs(x = "Price", title = "The distribution of prices") + facet_wrap("type")
# linear regression between price and type of property and number of bedrooms
boxplot(price~type,data=rental_df, main = "Boxplot of price and type")
# load packages
library(dplyr)
# relationship between type , number of bedroom and price
anova_regression_property <- aov(price ~ type, data = rental_df)
summary(anova_regression_property)
HSD_property  # p-adj value, significant
HSD_property <- TukeyHSD(anova_regression_property)
HSD_property  # p-adj value, significant
HSD_property <- TukeyHSD(anova_regression_property)
HSD_property  # p-adj value, significant
plot(HSD_property)
plot(rental_df$bedroom, rental_df$price)
plot(rental_df$bedroom, rental_df$price, xlabel = "bedroom", ylabel = "price")
cor(rental_df$price, rental_df$bedroom)
linear_regression_bedroom <- lm(price ~ bedroom, data = rental_df)
summary(linear_regression_bedroom)  # 平均来讲，每增加一个bedroom，租金将会上涨156.72，p-value都小于了0.05,（如上）,r-square的值只有0.4225，可以认为采用bedroom作为变量进行预测的模型只能够在42.25%的程度上进行解释
# Q2
# gain the descriptive statistics information for distribution of the number of the car space
describe(rental_df["car_space"])
# visualization of the distribution of the overall number of the car space
ggplot(rental_df, aes(x = car_space)) + geom_histogram() + labs(x = "Car Space", title = "The distribution of Car Space")
ggplot(rental_df, aes(x = car_space)) + geom_histogram() + labs(x = "Car Space", title = "The distribution of car Space") + facet_wrap("type")
boxplot(car_space~type,data=rental_df, main = "Boxplot of car space and type")
# linear regression between price and type of property and number of bedrooms
anova_regression_property_car_space <- aov(car_space ~ type, data = rental_df)
summary(anova_regression_property_car_space)
HSD_property_car_space <- TukeyHSD(anova_regression_property_car_space)
HSD_property_car_space  # p-adj value，小于0.05，认为在5%上是significant
# linear regression between price and type of property and number of bedrooms
anova_regression_property_car_space <- aov(car_space ~ type, data = rental_df)
summary(anova_regression_property_car_space)
HSD_property_car_space <- TukeyHSD(anova_regression_property_car_space)
HSD_property_car_space  # p-adj value
plot(HSD_property_car_space)
plot(rental_df$bedroom, rental_df$car_space)  # 从体上来看，随着bedroom的数量的上升，price的价格也随之上升
cor(rental_df$car_space, rental_df$bedroom)
linear_regression_bedroom_car_space <- lm(car_space ~ bedroom, data = rental_df)
summary(linear_regression_bedroom_car_space)
linear_regression_bedroom_car_space <- lm(car_space ~ bedroom, data = rental_df)
summary(linear_regression_bedroom_car_space)
linear_regression_bedroom_car_space <- lm(car_space ~ bedroom, data = rental_df)
summary(linear_regression_bedroom_car_space)
rental_adelaide_df <- rental_df[rental_df$sub == " Adelaide SA 5000", ]
rental_non_adelaide_df <- rental_df[rental_df$sub != " Adelaide SA 5000", ]
sort(table(rental_adelaide_df$street))
sort(table(rental_non_adelaide_df$sub))
# popu for Adelaide
rental_popu_df <- rental_df[rental_df$street == "Wright Street " | rental_df$street == "Waymouth Street " | rental_df$street == "- Waymouth Street" |
rental_df$street == "Hutt Street " | rental_df$street == "Hindley Street " | rental_df$street == "Gray Street ", ]
sort(table(rental_adelaide_df$street))
summary(rental_ws_df)
# popu for Adelaide
rental_popu_df <- rental_df[rental_df$street == "Wright Street " | rental_df$street == "Waymouth Street " | rental_df$street == "- Waymouth Street" |
rental_df$street == "Hutt Street " | rental_df$street == "Hindley Street " | rental_df$street == "Gray Street ", ]
summary(rental_ws_df)
summary(rental_popu_df)
View(rental_df)
sort(table(rental_non_adelaide_df$sub))
rental_non_adelaide_popu_df <- rental_df[rental_df$street == "North Adelaide SA 5006 ", ]
summary(rental_popu_df)
summary(rental_non_adelaide_popu_df)
barplot(table(rental_popu_df$type))
barplot(table(rental_popu_df$car_space))
hist(rental_popu_df$price)
barplot(table(rental_popu_df$bedroom))
barplot(table(rental_popu_df$bathroom))
# popu for sub
rental_popu_sub_df <- rental_df[rental_df$sub == " North Adelaide SA 5006", ]
summary(rental_popu_sub_df)
summary(rental_popu_df)
# popu for sub
rental_popu_sub_df <- rental_df[rental_df$sub == " North Adelaide SA 5006", ]
summary(rental_popu_sub_df)
barplot(table(rental_popu_sub_df$type))
sort(table(rental_non_adelaide_df$sub))
barplot(table(rental_popu_sub_df$type))
barplot(table(rental_popu_sub_df$car_space))
barplot(table(rental_popu_sub_df$type))
barplot(table(rental_popu_sub_df$car_space))
barplot(table(rental_popu_sub_df$bedroom))
barplot(table(rental_popu_sub_df$bathroom))
hist(rental_popu_sub_df$price)
barplot(table(rental_popu_sub_df$bathroom))
hist(rental_popu_sub_df$price)
shiny::runApp()
runApp()
runApp()
runApp()
ggplot(rental_df, aes(x = car_space)) + geom_histogram() + labs(x = "Car Space", title = "The distribution of Car Space")
runApp()
runApp()
runApp()
runApp()
ggplot(rental_df, aes(x = car_space)) + geom_histogram() + labs(x = "Car Space", title = "The distribution of car Space") + facet_wrap("type")
# load packages
library(dplyr)
library(tidyverse)
library(psych)
library(stats)
# load data
rental_df <- readRDS("examdata.RDS")
ggplot(rental_df, aes(x = car_space)) + geom_histogram() + labs(x = "Car Space", title = "The distribution of car Space") + facet_wrap("type")
runApp()
runApp()
# linear regression between price and type of property and number of bedrooms
anova_regression_property_car_space <- aov(car_space ~ type, data = rental_df)
summary(anova_regression_property_car_space)
HSD_property_car_space <- TukeyHSD(anova_regression_property_car_space)
HSD_property_car_space  # p-adj value
plot(HSD_property_car_space)
boxplot(car_space~type,data=rental_df, main = "Boxplot of car space and type")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
barplot(table(rental_popu_df$type))
# load packages
library(dplyr)
library(tidyverse)
library(psych)
library(stats)
# load data
rental_df <- readRDS("examdata.RDS")
# Q1
# gain the descriptive statistics information for distribution of the price
describe(rental_df["price"])
# visualization of the distribution of the overall price
ggplot(rental_df, aes(x = price)) + geom_histogram() + labs(x = "Price", title = "The distribution of prices")
ggplot(rental_df, aes(x = price)) + geom_histogram() + labs(x = "Price", title = "The distribution of prices") + facet_wrap("type")
# relationship between type , number of bedroom and price
boxplot(price~type,data=rental_df, main = "Boxplot of price and type")
anova_regression_property <- aov(price ~ type, data = rental_df)
summary(anova_regression_property)
HSD_property <- TukeyHSD(anova_regression_property)
HSD_property  # p-adj value, significant
plot(HSD_property)
plot(rental_df$bedroom, rental_df$price, xlabel = "bedroom", ylabel = "price")  # scatter plot
cor(rental_df$price, rental_df$bedroom)  # correlation ship
linear_regression_bedroom <- lm(price ~ bedroom, data = rental_df)  # linear regression
summary(linear_regression_bedroom)
# Q2
# gain the descriptive statistics information for distribution of the number of the car space
describe(rental_df["car_space"])
# visualization of the distribution of the overall number of the car space
ggplot(rental_df, aes(x = car_space)) + geom_histogram() + labs(x = "Car Space", title = "The distribution of Car Space")
ggplot(rental_df, aes(x = car_space)) + geom_histogram() + labs(x = "Car Space", title = "The distribution of car Space") + facet_wrap("type")
boxplot(car_space~type,data=rental_df, main = "Boxplot of car space and type")
# linear regression between price and type of property and number of bedrooms
anova_regression_property_car_space <- aov(car_space ~ type, data = rental_df)
summary(anova_regression_property_car_space)
HSD_property_car_space <- TukeyHSD(anova_regression_property_car_space)
HSD_property_car_space  # p-adj value
plot(HSD_property_car_space)
plot(rental_df$bedroom, rental_df$car_space)
cor(rental_df$car_space, rental_df$bedroom)
linear_regression_bedroom_car_space <- lm(car_space ~ bedroom, data = rental_df)
summary(linear_regression_bedroom_car_space)
# Q3
# got data with sub is Adelaide
rental_adelaide_df <- rental_df[rental_df$sub == " Adelaide SA 5000", ]
rental_non_adelaide_df <- rental_df[rental_df$sub != " Adelaide SA 5000", ]
sort(table(rental_adelaide_df$street))
sort(table(rental_non_adelaide_df$sub))
# popu for Adelaide
rental_popu_df <- rental_df[rental_df$street == "Wright Street " | rental_df$street == "Waymouth Street " | rental_df$street == "- Waymouth Street" |
rental_df$street == "Hutt Street " | rental_df$street == "Hindley Street " | rental_df$street == "Gray Street ", ]
summary(rental_popu_df)
barplot(table(rental_popu_df$type))
barplot(table(rental_popu_df$car_space))
hist(rental_popu_df$price)
barplot(table(rental_popu_df$bedroom))
barplot(table(rental_popu_df$bathroom))
# popu for sub
rental_popu_sub_df <- rental_df[rental_df$sub == " North Adelaide SA 5006", ]
summary(rental_popu_sub_df)
barplot(table(rental_popu_sub_df$type))
barplot(table(rental_popu_sub_df$car_space))
barplot(table(rental_popu_sub_df$bedroom))
barplot(table(rental_popu_sub_df$bathroom))
hist(rental_popu_sub_df$price)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
barplot(table(rental_popu_df$bathroom))
runApp()
